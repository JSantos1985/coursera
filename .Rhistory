add2 <- function(x, y) {
x+y
}
add2(3, 5)
source('~/.active-rstudio-document')
x <- 1:20
above(x)
above(x, 11)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
library swirl()
lib(swirl)
library(swirl)
swirl()
library(swirl)
swirl()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique_vals)
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapplu(flags, unique())
sapplu(flags, unique
sapply(list, function)
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
sapply(flags, class, character(1))
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data("iris")
?iris
summary(iris)
tapply(iris$species, iris$Sepal.Lenght, mean)
tapply(iris$species, iris$Sepal.Length, mean)
tapply(iris$Sepal.Length, iris$Species, summary)
tapply(iris$Sepal.Length, iris$Species, mean)
class(rowMeans(iris[, 1:4]))
class(apply(iris[, 1:4], 2, mean))
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
summary(mtcars)
summary(mtcars$cyl)
range(mtcars$cyl)
apply(mtcars, 2, mean)
lapply(mtcars, mean)
mean(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(mtcars, cyl, mean)
split(mtcars, mtcars$cyl)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
summary mtcars
summary(mtcars)
tapply(mtcars$hp, mtcars$cyl, mean)
debug(ls)
ls(bla)
3
2
1
13
2
summary(mtcars)
summary(mtcars)
t
stop
quit
tapply
library(mtcars)
library("mtcars")
library(datasets)
data(mtcars)
summary(mtcars)
tapply($cyl, $hp, mean)
tapply(mtcars$cyl, mtcars$hp, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
209.21429-84.63636
x <- list(2, "a", "b", TRUE)
x
class(x)
x[[2]]
x[[1]]
class(x[[1]])
class(x[[2]])
x <- 1:4
y <- 2
x+y
class(x+y)
m1 <- matrix(c(1/2, -1/4, -1, 3/4), nrow = 2, ncol = 2)
solve(m1)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
bla <- cacheSolve(m1)
bla <- makeCacheMatrix(m1)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
bla <- makeCacheMatrix(m1)
bla
cacheSolve(bla)
cacheSolve(bla)
y <- makeCacheMatrix(m1)
y <- cacheSolve(m1)
y <- cacheSolve(m1)
y <- cacheSolve(y)
y <- cacheSolve(m1)
View(bla)
y
m1
makeCacheMatrix(m1)
cacheSolve(M1)
cacheSolve(m1)
my_Matrix <- makeCacheMatrix(m1)
my_Matrix
cacheSolve(my_Matrix)
cacheSolve(my_Matrix)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
library(datasets)
data(mtcars)
summary(mtcars)
tapply(mtcars$cyl, mtcars$hp, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
209.21429-82.63636
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
name(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10, replace = FALSE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
sample(c.(c0,1), replacement = TRUE, prob = c(0.3, 0.7))
sample(c.(c0,1), prob = c(0.3, 0.7))
sample(c(c0,1), prob = c(0.3, 0.7))
sample(c(0,1), prob = c(0.3, 0.7))
sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean=100, sd=25)
?rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5,10))
my_pois
cm <- colMeans(rpois)
cm <- colMeans(my_pois)
hist(cm)
library(datasets)
data(cars)
?mcars
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(y = cars$speed, x = cars$dist)
plot(x = cars$speed, y = cars$dist)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab="Stopping Distance", main="My Plot")
plot(cars, main="My Plot")
?plot
plot(cars, sub="My Plot Subtitle")
plot(cars, col=2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2
)
load(mtcars)
mtcars
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl)
boxplot(formula = mpg ~ cyl, data=mtcars)
hist(mtcars$mpg)
set.seed(1)
rpois(5, 2)
?rnorm
?dnorm
?dpois
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
swirl()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lappl(flags, class)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
quit()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
x <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
swt("C:/Users/JSantos/Desktop/coursera")
setwd("C:/Users/JSantos/Desktop/coursera")
?download.file
x <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "data.csv")
x
print(x)
df <- read.csv("data.csv")
View(df)
sum(df$VAL == 24)
df$VAL
sum(df$VAL == 24, na.rm=T)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "data2.xlsx")
library(xlsx)
library("xlsx")
library(xlsx)
install(xlsx)
install.packages("xlsx")
library("xlsx")
x2 <- read.xlsx("data2.xlsx")
x2 <- read.xlsx("data2.xlsx", sheetIndex=1, header=T)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "data2.xlsx")
x3 <- read.xlsx("data2.xlsx", sheetIndex=1, header=T)
x3 <- read.xlsx("data3.xlsx", sheetIndex=1, header=T)
x3
sum(dat$Zip*dat$Ext,na.rm=T)
sum(x3$Zip*dat$Ext,na.rm=T)
sum(x3$Zip*x3$Ext,na.rm=T)
library(XML)
install.packages(XML)
install.packages("XML")
install.packages("XML")
library(XML)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
doc <- xmlTreeParse(url,useInternal=TRUE)
url
doc <- xmlTreeParse(url)
doc <- xmlTreeParse(url,useInternalNodes = TRUE)
download.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml, "input.xml")
download.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml, destfile="input.xml")
download.file(https:/d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml, destfile="input.xml")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", destfile="input.xml")
doc <- xmlTreeParse("input.xml",useInternalNodes = TRUE)
rootNode <- xmlRoot(doc)
rootNode
names(rootNode)
rootNode[[1]]
rootNode[[1]][[1]]
rootNode[[1]][[2]]
xmlSApplu(rootnode, xmlValue())
xmlSApplu(rootnode, xmlValue)
xmlSApply(rootnode, xmlValue)
xmlSApply(rootNode, xmlValue)
xpathSApplu(rootnode, "//zipcode", xmlValue())
xpathSApply(rootnode, "//zipcode", xmlValue())
xpathSApply(rootNode, "//zipcode", xmlValue)
zips <- xpathSApply(rootNode, "//zipcode", xmlValue)
sum(zips == 21231)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile="data5.csv")
df <- read.csv("data5.csv")
fread()
fread(df)
df
?fread
library(data.table)
install.packages(data.table)
install.packages("data.table")
library(data.table)
x <- fread("data5.csv")
x
DT <- fread("data5.csv")
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
tapply(DT$pwgtp15,DT$SEX,mean)
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]))
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]))
system.time(mean(DT$pwgtp15),by=SEX)
system.time(mean(DT$pwgtp15),by=SEX])
mean(DT$pwgtp15,by=DT$SEX)
system.tome(mean(DT$pwgtp15,by=DT$SEX))
system.time(mean(DT$pwgtp15,by=DT$SEX))
?system.time
system.time(DT[,mean(pwgtp15),by=SEX])
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
sum(dat$Zip*dat$Ext,na.rm=T)
dat <- read.xlsx("data3.xlsx", sheetIndex=1, header=T)
sum(dat$Zip*dat$Ext,na.rm=T)
dat < read.xlsx("data3.xlsx", sheetIndex=1, header=T, rowIndex=18:23, colIndex=7:15)
dat < read.xlsx("data3.xlsx", sheetIndex=1, rowIndex=18:23, colIndex=7:15)
dat <- read.xlsx("data3.xlsx", sheetIndex=1, rowIndex=18:23, colIndex=7:15)
sum(dat$Zip*dat$Ext,na.rm=T)
session
